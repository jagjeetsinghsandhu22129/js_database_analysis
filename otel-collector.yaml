receivers:
  # Make sure to add the otlp receiver.
  # This will open up the receiver on port 4317
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
  postgresql:
    endpoint: postgres:5432
    transport: tcp
    username: postgres
    password: example
    databases:
    - postgres
    tls:
        insecure: true

    connection_pool:
      max_idle_time: 10m
      max_lifetime: 0
      max_idle: 2
      max_open: 5
  sqlquery:
    driver: postgres
    datasource: "host=postgres user=postgres password=example sslmode=disable database=postgres"
    queries:
      - sql: "SELECT COUNT(*) as count_test FROM pg_stat_activity WHERE query_start IS NOT NULL"
        metrics:
          - metric_name: query_activities
            value_column: count_test
processors:
extensions:
  health_check: {}
exporters:
  otlp:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  prometheus:
    endpoint: 0.0.0.0:9090
  logging:

service:
  extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: []
      exporters: [otlp]

    metrics:
      receivers: [otlp, postgresql, sqlquery]
      processors: []
      exporters: [prometheus, logging]